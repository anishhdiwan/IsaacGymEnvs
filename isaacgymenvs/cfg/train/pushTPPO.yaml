params:  
  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic
    separate: False
    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init:
          name: default
          scale: 0.02
        sigma_init:
          name: const_initializer
          val: 0
        fixed_sigma: True
    mlp:
      units: [256, 128, 64]
      activation: relu
      initializer:
          name: default
          scale: 2

  load_checkpoint: ${if:${...checkpoint},True,False} #Training checkpint. Set to True if the main config has a checkpoint given. Is irrelevant when playing policies
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:pushT,${....experiment}}
    full_experiment_name: ${.name}
    max_epochs: ${resolve_default:10, ''}
    env_name:  pushT
    reward_shaper:
      scale_value: 0.1
    normalize_advantage: True
    gamma: 0.95
    tau: 0.9

    learning_rate: 1e-4
    score_to_win: 25 # Training stops if reached

    grad_norm: 0.5
    entropy_coef: 0.0
    truncate_grads: True
    e_clip: 0.2
    clip_value: True
    num_actors: 16 # num_envs to run
    horizon_length: 256
    minibatch_size: 1024 # batch_size % minibatch_size == 0 | batch_size = horizon_len * num_actors * num_agents   
    mini_epochs: 4
    critic_coef: 1
    lr_schedule:  adaptive
    kl_threshold: 0.008
    normalize_input: True
    seq_length: 4
    bounds_loss_coef: 0

    player:
      render: True
      render_sleep: 0.01 # Determines frame rate (how many seconds to wait between two frames)
      games_num: 5 # Number of games to play
