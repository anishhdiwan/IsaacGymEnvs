params:
  seed: ${...seed}

  algo:
    name: amp_continuous

  model:
    name: continuous_amp

  network:
    name: amp
    separate: True

    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: -2.9
        fixed_sigma: True
        learn_sigma: False

    mlp:
      units: [1024, 512]
      activation: relu
      d2rl: False
      initializer:
        name: default
      regularizer:
        name: None

    disc:
      units: [1024, 512]
      activation: relu

      initializer:
        name: default
      regularizer:
        name: None

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:HumanoidAMP,${....experiment}}
    full_experiment_name: ${.name}
    env_name: rlgpu
    # ppo: True
    multi_gpu: ${....multi_gpu}
    mixed_precision: False
    normalize_input: True
    normalize_value: True
    value_bootstrap: True
    num_actors: ${....task.env.numEnvs}
    reward_shaper:
      scale_value: 1.
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 5e-5
    lr_schedule: constant
    kl_threshold: 0.008
    score_to_win: 50000
    max_frames: ${resolve_default:10e6,${....max_iterations}}
    save_best_after: 50
    save_frequency: 30
    print_stats: True
    grad_norm: 1.0
    entropy_coef: 0.0
    truncate_grads: False
    e_clip: 0.2
    horizon_length: 16
    minibatch_size: 2048
    mini_epochs: 6
    critic_coef: 5
    clip_value: False
    seq_len: 4
    bounds_loss_coef: 10
    
    
    amp_obs_demo_buffer_size: 200000
    amp_replay_buffer_size: 1000000
    amp_replay_keep_prob: 0.01
    amp_batch_size: 512
    amp_minibatch_size: 1024
    disc_coef: 5
    disc_logit_reg: 0.05
    disc_grad_penalty: 5
    disc_reward_scale: 2
    disc_weight_decay: 0.0001
    normalize_amp_input: True

    task_reward_w: 0.0
    disc_reward_w: 1.0
    # Frequency at which to evaluate the model's performance. Comment out or set to 0 to skip this 
    perf_metrics_freq: 30
    # Pause training after a certain number of steps to conduct experiments on the discriminator. DO NOT SET TO TRUE for regular runs
    disc_experiment: False
    disc_expt_policy_training: 2e6
    disc_expt_reset_disc: True
    
    player:
      # Set visualise_disc_landscape to false to run policy
      visualise_disc_landscape: True
      env_params: ${.....task.env}
